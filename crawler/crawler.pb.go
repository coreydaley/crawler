// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crawler.proto

package crawler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c7eabcfe7807d1, []int{0}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StartReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartReply) Reset()         { *m = StartReply{} }
func (m *StartReply) String() string { return proto.CompactTextString(m) }
func (*StartReply) ProtoMessage()    {}
func (*StartReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c7eabcfe7807d1, []int{1}
}

func (m *StartReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReply.Unmarshal(m, b)
}
func (m *StartReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReply.Marshal(b, m, deterministic)
}
func (m *StartReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReply.Merge(m, src)
}
func (m *StartReply) XXX_Size() int {
	return xxx_messageInfo_StartReply.Size(m)
}
func (m *StartReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartReply proto.InternalMessageInfo

func (m *StartReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StopRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c7eabcfe7807d1, []int{2}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

func (m *StopRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type StopReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopReply) Reset()         { *m = StopReply{} }
func (m *StopReply) String() string { return proto.CompactTextString(m) }
func (*StopReply) ProtoMessage()    {}
func (*StopReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c7eabcfe7807d1, []int{3}
}

func (m *StopReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReply.Unmarshal(m, b)
}
func (m *StopReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReply.Marshal(b, m, deterministic)
}
func (m *StopReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReply.Merge(m, src)
}
func (m *StopReply) XXX_Size() int {
	return xxx_messageInfo_StopReply.Size(m)
}
func (m *StopReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReply.DiscardUnknown(m)
}

var xxx_messageInfo_StopReply proto.InternalMessageInfo

func (m *StopReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c7eabcfe7807d1, []int{4}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListReply struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReply) Reset()         { *m = ListReply{} }
func (m *ListReply) String() string { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()    {}
func (*ListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c7eabcfe7807d1, []int{5}
}

func (m *ListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReply.Unmarshal(m, b)
}
func (m *ListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReply.Marshal(b, m, deterministic)
}
func (m *ListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReply.Merge(m, src)
}
func (m *ListReply) XXX_Size() int {
	return xxx_messageInfo_ListReply.Size(m)
}
func (m *ListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListReply proto.InternalMessageInfo

func (m *ListReply) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*StartRequest)(nil), "crawler.StartRequest")
	proto.RegisterType((*StartReply)(nil), "crawler.StartReply")
	proto.RegisterType((*StopRequest)(nil), "crawler.StopRequest")
	proto.RegisterType((*StopReply)(nil), "crawler.StopReply")
	proto.RegisterType((*ListRequest)(nil), "crawler.ListRequest")
	proto.RegisterType((*ListReply)(nil), "crawler.ListReply")
}

func init() {
	proto.RegisterFile("crawler.proto", fileDescriptor_84c7eabcfe7807d1)
}

var fileDescriptor_84c7eabcfe7807d1 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2e, 0x4a, 0x2c,
	0xcf, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x94, 0xb8,
	0x78, 0x82, 0x4b, 0x12, 0x8b, 0x4a, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x35,
	0x2e, 0x2e, 0xa8, 0x9a, 0x82, 0x9c, 0x4a, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4,
	0x74, 0x98, 0x22, 0x18, 0x57, 0x49, 0x91, 0x8b, 0x3b, 0xb8, 0x24, 0xbf, 0x00, 0x9f, 0x51, 0xaa,
	0x5c, 0x9c, 0x10, 0x25, 0x04, 0x4d, 0xf2, 0xc9, 0x2c, 0x2e, 0x21, 0x60, 0x12, 0x44, 0x09, 0x16,
	0x93, 0x78, 0xe0, 0x26, 0x19, 0xad, 0x60, 0xe4, 0x62, 0x77, 0x86, 0xf8, 0x55, 0xc8, 0x94, 0x8b,
	0x15, 0xec, 0x0f, 0x21, 0x51, 0x3d, 0x58, 0x68, 0x20, 0xfb, 0x5d, 0x4a, 0x18, 0x5d, 0xb8, 0x20,
	0xa7, 0x52, 0x89, 0x41, 0xc8, 0x88, 0x8b, 0x05, 0xe4, 0x66, 0x21, 0x11, 0x24, 0x69, 0xb8, 0x2f,
	0xa5, 0x84, 0xd0, 0x44, 0xe1, 0x7a, 0x40, 0xae, 0x43, 0xd2, 0x83, 0xe4, 0x1f, 0x24, 0x3d, 0x70,
	0x2f, 0x28, 0x31, 0x38, 0xe9, 0x71, 0xc9, 0x64, 0xe6, 0xeb, 0xa5, 0x67, 0x96, 0x64, 0x94, 0x26,
	0xe9, 0x25, 0xe7, 0x17, 0xa5, 0x56, 0xa6, 0x24, 0xe6, 0xa4, 0x56, 0xc2, 0xd4, 0x3a, 0xf1, 0x40,
	0xfd, 0x11, 0x00, 0x8a, 0xc1, 0x00, 0xc6, 0x24, 0x36, 0x70, 0x54, 0x1a, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x46, 0x75, 0xcb, 0x2b, 0xdb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CrawlerClient is the client API for Crawler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrawlerClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartReply, error)
	Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopReply, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
}

type crawlerClient struct {
	cc grpc.ClientConnInterface
}

func NewCrawlerClient(cc grpc.ClientConnInterface) CrawlerClient {
	return &crawlerClient{cc}
}

func (c *crawlerClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartReply, error) {
	out := new(StartReply)
	err := c.cc.Invoke(ctx, "/crawler.Crawler/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crawlerClient) Stop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopReply, error) {
	out := new(StopReply)
	err := c.cc.Invoke(ctx, "/crawler.Crawler/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *crawlerClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := c.cc.Invoke(ctx, "/crawler.Crawler/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrawlerServer is the server API for Crawler service.
type CrawlerServer interface {
	Start(context.Context, *StartRequest) (*StartReply, error)
	Stop(context.Context, *StopRequest) (*StopReply, error)
	List(context.Context, *ListRequest) (*ListReply, error)
}

// UnimplementedCrawlerServer can be embedded to have forward compatible implementations.
type UnimplementedCrawlerServer struct {
}

func (*UnimplementedCrawlerServer) Start(ctx context.Context, req *StartRequest) (*StartReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedCrawlerServer) Stop(ctx context.Context, req *StopRequest) (*StopReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedCrawlerServer) List(ctx context.Context, req *ListRequest) (*ListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterCrawlerServer(s *grpc.Server, srv CrawlerServer) {
	s.RegisterService(&_Crawler_serviceDesc, srv)
}

func _Crawler_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrawlerServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crawler.Crawler/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrawlerServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crawler_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrawlerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crawler.Crawler/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrawlerServer).Stop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Crawler_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrawlerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crawler.Crawler/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrawlerServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Crawler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crawler.Crawler",
	HandlerType: (*CrawlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Crawler_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Crawler_Stop_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Crawler_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "crawler.proto",
}
